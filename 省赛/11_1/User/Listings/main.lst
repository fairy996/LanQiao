C51 COMPILER V9.60.7.0   MAIN                                                              04/09/2024 10:30:29 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Program Files\ARM\Core\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\HardWare) DEBUG
                    - OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "sys.h"
   2          
   3          //******************参数设置*************************
   4          unsigned int Key_Slow_Down;
   5          unsigned char Key_Val;
   6          unsigned char Key_Down;
   7          unsigned char Key_Up;
   8          unsigned char Key_Old;
   9          // 数码管
  10          unsigned int NiXie_Slow_Down;
  11          unsigned char NiXie_Location;
  12          unsigned char NiXie_Value[8] = {16, 16, 16, 16, 16, 16, 16, 16};
  13          unsigned char NiXie_Dot[8] = {0, 0, 0, 0, 0, 0, 0, 0};
  14          // LED
  15          unsigned char Led_Value[8] = {0, 0, 0, 0, 0, 0, 0, 0};
  16          
  17          // 时间变量
  18          
  19          // 数据
  20          unsigned int temp;
  21          unsigned char temp_max_val = 30;
  22          unsigned char temp_min_val = 20;
  23          unsigned char temp_max_old;
  24          unsigned char temp_min_old;
  25          unsigned char voltiage;
  26          // 标志位
  27          unsigned char state = 0;         // 0 数据界面 1参数界面
  28          unsigned char Para_Flag = 0; // 0 参数符合要求 1 参数不符合要求
  29          unsigned char Para_Mode = 0; // 0下限 1上限
  30          void Clear_NiXie()
  31          {
  32   1              unsigned char i;
  33   1              for (i = 0; i < 8; i++)
  34   1              {
  35   2                      NiXie_Value[i] = 16;
  36   2                      NiXie_Dot[i] = 0;
  37   2              }
  38   1      }
  39          
  40          void Key_pro()
  41          {
  42   1              if (Key_Slow_Down)
  43   1                      return;
  44   1              Key_Slow_Down = 1;
  45   1      
  46   1              Key_Val = Key_Scan1();
  47   1              Key_Down = Key_Val & (Key_Val ^ Key_Old);
  48   1              Key_Up = ~Key_Val & (Key_Val ^ Key_Old);
  49   1              Key_Old = Key_Val;
  50   1      
  51   1              switch (Key_Down)
  52   1              {
  53   2              case 4:
  54   2                      Clear_NiXie();
C51 COMPILER V9.60.7.0   MAIN                                                              04/09/2024 10:30:29 PAGE 2   

  55   2                      if (state == 0)
  56   2                      {
  57   3                              state = 1;
  58   3                              temp_max_old = temp_max_val;
  59   3                              temp_min_old = temp_min_val;
  60   3                              Para_Mode = 0;
  61   3                      }
  62   2                      else if (state == 1)
  63   2                      {
  64   3                              state = 0;
  65   3                              if (temp_max_val < temp_min_val)
  66   3                              {
  67   4                                      temp_max_val = temp_max_old;
  68   4                                      temp_min_val = temp_min_old;
  69   4                                      Para_Flag = 1;
  70   4                              }
  71   3                              else
  72   3                              {
  73   4                                      Para_Flag = 0;
  74   4                              }
  75   3                      }
  76   2                      break;
  77   2              case 5:
  78   2                      Clear_NiXie();
  79   2                      if(state == 1)
  80   2                              Para_Mode = ~Para_Mode;
  81   2                      break;
  82   2              case 6:
  83   2                      Clear_NiXie();
  84   2                      if (state == 1)
  85   2                      {
  86   3                              if (Para_Mode)
  87   3                              {
  88   4                                      if (++temp_max_val == 99)
  89   4                                              temp_max_val = 99;
  90   4                              }
  91   3                              else
  92   3                              {
  93   4                                      if (++temp_min_val == 99)
  94   4                                              temp_min_val = 99;
  95   4                              }
  96   3                      }
  97   2                      break;
  98   2              case 7:
  99   2                      Clear_NiXie();
 100   2                      if (state == 1)
 101   2                      {
 102   3                              if (Para_Mode)
 103   3                              {
 104   4                                      if (--temp_max_val == 0)
 105   4                                              temp_max_val = 0;
 106   4                              }
 107   3                              else
 108   3                              {
 109   4                                      if (--temp_min_val == 0)
 110   4                                              temp_min_val = 0;
 111   4                              }
 112   3                      }
 113   2                      break;
 114   2              }
 115   1      }
 116          
C51 COMPILER V9.60.7.0   MAIN                                                              04/09/2024 10:30:29 PAGE 3   

 117          void NiXie_pro()
 118          {
 119   1              if (NiXie_Slow_Down)
 120   1                      return;
 121   1              NiXie_Slow_Down = 1;
 122   1      
 123   1              temp = Read_Temp() / 10;
 124   1      
 125   1              if (state == 0)
 126   1              {
 127   2                      NiXie_Value[0] = 12;
 128   2                      NiXie_Value[6] = temp / 10;
 129   2                      NiXie_Value[7] = temp % 10;
 130   2              }
 131   1              else if (state == 1)
 132   1              {
 133   2                      NiXie_Value[0] = 17;
 134   2                      NiXie_Value[3] = temp_max_val / 10;
 135   2                      NiXie_Value[4] = temp_max_val % 10;
 136   2                      NiXie_Value[6] = temp_min_val / 10;
 137   2                      NiXie_Value[7] = temp_min_val % 10;
 138   2              }
 139   1      }
 140          
 141          void Led_pro()
 142          {
 143   1              if (temp > temp_max_val)
 144   1                      voltiage = (4 / 5) * 255;
 145   1              else if (temp < temp_min_val)
 146   1                      voltiage = (2 / 5) * 255;
 147   1              else
 148   1                      voltiage = (3 / 5) * 255;
 149   1              dac_out(voltiage);
 150   1              Led_Value[0] = (temp > temp_max_val);
 151   1              Led_Value[1] = ((temp <= temp_max_val) && (temp >= temp_min_val));
 152   1              Led_Value[2] = (temp < temp_min_val);
 153   1              Led_Value[3] = Para_Flag;
 154   1      }
 155          void Timer0_Isr(void) interrupt 1
 156          {
 157   1              if (++Key_Slow_Down == 10)
 158   1                      Key_Slow_Down = 0;
 159   1              if (++NiXie_Slow_Down == 100)
 160   1                      Key_Slow_Down = 0;
 161   1              if (++NiXie_Location == 8)
 162   1                      NiXie_Location = 0;
 163   1      
 164   1              NiXie_Display(NiXie_Location, NiXie_Value[NiXie_Location], NiXie_Dot[NiXie_Location]);
 165   1              LED_Display(NiXie_Location, Led_Value[NiXie_Location]);
 166   1      }
 167          
 168          void Timer0_Init(void) // 1毫秒@12.000MHz
 169          {
 170   1              AUXR &= 0x7F; // 定时器时钟12T模式
 171   1              TMOD &= 0xF0; // 设置定时器模式
 172   1              TL0 = 0x18;       // 设置定时初始值
 173   1              TH0 = 0xFC;       // 设置定时初始值
 174   1              TF0 = 0;          // 清除TF0标志
 175   1              TR0 = 1;          // 定时器0开始计时
 176   1              ET0 = 1;          // 使能定时器0中断
 177   1              EA = 1;
 178   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              04/09/2024 10:30:29 PAGE 4   

 179          
 180          void main()
 181          {
 182   1              temp = Read_Temp();
 183   1              while (temp == 850)
 184   1                      temp = Read_Temp();
 185   1              Init_Sys();
 186   1              Timer0_Init();
 187   1      
 188   1              while (1)
 189   1              {
 190   2                      Key_pro();
 191   2                      NiXie_pro();
 192   2                      Led_pro();
 193   2              }
 194   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    587    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     43    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
