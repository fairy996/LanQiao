C51 COMPILER V9.60.7.0   MAIN                                                              03/27/2024 06:41:33 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Program Files\ARM\Core\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(
                    -.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "sys.h"
   2          
   3          unsigned char nixie_data[8] = {20, 20, 20, 20, 20, 20, 20, 20};
   4          unsigned char nixie_pos[8] = {0, 0, 0, 0, 0, 0, 0, 0};
   5          unsigned char led_data[8] = {0, 0, 0, 0, 0, 0, 0, 0};
   6          unsigned char nixie_state = 0;
   7          unsigned char v_max = 45;
   8          unsigned char v_min = 5;
   9          unsigned char led_lightflag = 0;
  10          unsigned char para_state = 0;
  11          unsigned char time_100ms = 0;
  12          unsigned char distance_flag = 0;
  13          unsigned int distance = 0;
  14          unsigned char dac_digital = 0;
  15          unsigned char para_flag = 1;
  16          unsigned int time_500ms = 0;
  17          void key_pro()
  18          {
  19   1          unsigned char key_value = Key_Scan1();
  20   1          switch (key_value)
  21   1          {
  22   2          case 1: // S7
  23   2              if (nixie_state == 2)
  24   2              {
  25   3                  if (para_state)
  26   3                  {
  27   4                      if ((v_min -= 5) < 5)
  28   4                          v_min = 50;
  29   4                  }
  30   3                  else
  31   3                  {
  32   4                      if ((v_max -= 5) < 5)
  33   4                          v_max = 50;
  34   4                  }
  35   3              }
  36   2              break;
  37   2          case 2: // S6
  38   2              if (nixie_state == 2)
  39   2              {
  40   3                  if (para_state)
  41   3                  {
  42   4                      if ((v_min += 5) > 50)
  43   4                          v_min = 5;
  44   4                  }
  45   3                  else
  46   3                  {
  47   4                      if ((v_max += 5) > 50)
  48   4                          v_max = 5;
  49   4                  }
  50   3              }
  51   2              break;
  52   2          case 3: // S5
  53   2              para_state ^= 1;
  54   2              break;
C51 COMPILER V9.60.7.0   MAIN                                                              03/27/2024 06:41:33 PAGE 2   

  55   2          case 4: // S4
  56   2              if (nixie_state == 0)
  57   2                  nixie_state = 1;
  58   2              else if (nixie_state == 1)
  59   2              {
  60   3                  nixie_state = 2;
  61   3                  para_state = 0;
  62   3                  para_flag = 0;
  63   3              }
  64   2              else if (nixie_state == 2)
  65   2              {
  66   3                  nixie_state = 0;
  67   3                  para_flag = 1;
  68   3              }
  69   2              break;
  70   2          }
  71   1      }
  72          void Clear_dat()
  73          {
  74   1          unsigned char i = 0;
  75   1          for (i = 0; i < 8; i++)
  76   1          {
  77   2              nixie_data[i] = 20;
  78   2              nixie_pos[i] = 0;
  79   2              led_data[i] = 0;
  80   2          }
  81   1      }
  82          void nixie_pro()
  83          {
  84   1          unsigned char v_temporary = 0;
  85   1          unsigned int v_analog = 0;
  86   1          v_temporary = adc_read(0x03);
  87   1          v_analog = (v_temporary * 100) / 255 * 5;
  88   1          if (para_flag)
  89   1          {
  90   2              distance_flag = (v_analog > v_min * 10 && v_analog < v_max * 10);
  91   2              // if (distance_flag)
  92   2              //     distance = ultr_read();
  93   2          }
  94   1          led_lightflag = distance_flag;
  95   1      
  96   1          if (nixie_state == 0)
  97   1          {
  98   2              Clear_dat();
  99   2              nixie_data[0] = 16;
 100   2              nixie_data[5] = v_analog / 100;
 101   2              nixie_data[6] = v_analog % 100 / 10;
 102   2              nixie_data[7] = v_analog % 10;
 103   2              nixie_pos[5] = 1;
 104   2          }
 105   1          else if (nixie_state == 2)
 106   1          {
 107   2              Clear_dat();
 108   2              nixie_data[0] = 17;
 109   2              nixie_data[3] = v_max / 10;
 110   2              nixie_data[4] = v_max % 10;
 111   2              nixie_pos[3] = 1;
 112   2              nixie_data[6] = v_min / 10;
 113   2              nixie_data[7] = v_min % 10;
 114   2              nixie_pos[6] = 1;
 115   2          }
 116   1          else if (nixie_state == 1)
C51 COMPILER V9.60.7.0   MAIN                                                              03/27/2024 06:41:33 PAGE 3   

 117   1          {
 118   2              Clear_dat();
 119   2              nixie_data[0] = 19;
 120   2              if (distance_flag == 0)
 121   2              {
 122   3                  nixie_data[5] = 10;
 123   3                  nixie_data[6] = 10;
 124   3                  nixie_data[7] = 10;
 125   3              }
 126   2              else
 127   2              {
 128   3                  if (distance > 99)
 129   3                  {
 130   4                      nixie_data[5] = distance / 100;
 131   4                      nixie_data[6] = distance % 100 / 10;
 132   4                      nixie_data[7] = distance % 10;
 133   4                  }
 134   3                  else if (distance > 9)
 135   3                  {
 136   4                      nixie_data[5] = 20;
 137   4                      nixie_data[6] = distance / 10;
 138   4                      nixie_data[7] = distance % 10;
 139   4                  }
 140   3                  else
 141   3                  {
 142   4                      nixie_data[5] = 20;
 143   4                      nixie_data[6] = 20;
 144   4                      nixie_data[7] = distance;
 145   4                  }
 146   3              }
 147   2          }
 148   1          NiXie_Control(nixie_data, nixie_pos);
 149   1      }
 150          void led_pro()
 151          {
 152   1          led_data[0] = (nixie_state == 0);
 153   1          led_data[1] = (nixie_state == 1);
 154   1          led_data[2] = (nixie_state == 2);
 155   1          led_data[7] = (distance_flag) ? led_lightflag : 0;
 156   1          Led_control(led_data);
 157   1      }
 158          void Timer1_Isr(void) interrupt 3
 159          {
 160   1          if (++time_100ms == 150)
 161   1          {
 162   2              time_100ms = 0;
 163   2              led_lightflag ^= 1;
 164   2          }
 165   1          if(distance_flag)
 166   1          {
 167   2              if(++time_500ms > 500)
 168   2              {
 169   3                  time_500ms = 0;
 170   3                  distance = ultr_read();
 171   3              }
 172   2          }
 173   1      }
 174          
 175          void Timer1_Init(void) // 1毫秒@12.000MHz
 176          {
 177   1          AUXR &= 0xBF; // 定时器时钟12T模式
 178   1          TMOD &= 0x0F; // 设置定时器模式
C51 COMPILER V9.60.7.0   MAIN                                                              03/27/2024 06:41:33 PAGE 4   

 179   1          TL1 = 0x18;   // 设置定时初始值
 180   1          TH1 = 0xFC;   // 设置定时初始值
 181   1          TF1 = 0;      // 清除TF1标志
 182   1          TR1 = 1;      // 定时器1开始计时
 183   1          ET1 = 1;      // 使能定时器1中断
 184   1          EA = 1;       // 使能总中断
 185   1      }
 186          void Timer0_Init(void)
 187          {
 188   1          AUXR &= 0xBF; // 定时器时钟12T模式
 189   1          TMOD &= 0xF0; // 设置定时器模式
 190   1          TL0 = 0x50;
 191   1          TH0 = 0xFB;
 192   1          TF0 = 0;
 193   1          TR0 = 0;
 194   1          ET0 = 0;
 195   1      }
 196          void main(void)
 197          {
 198   1          Init_Sys();
 199   1          Timer1_Init();
 200   1          Timer0_Init();
 201   1         
 202   1          while (1)
 203   1          {
 204   2              key_pro();
 205   2              led_pro();
 206   2              nixie_pro();
 207   2          }
 208   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    723    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     37    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
