C51 COMPILER V9.60.7.0   MAIN                                                              04/06/2024 23:11:24 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Program Files\ARM\Core\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\HardWare) DEBUG
                    - OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "sys.h"
   2          
   3          //**********参数设置******************
   4          // 按键
   5          unsigned int Key_Slow_Down;
   6          unsigned char Key_Val;
   7          unsigned char Key_Up;
   8          unsigned char Key_Down;
   9          unsigned char Key_Old;
  10          // 数码管
  11          unsigned int NiXie_Slow_Down;
  12          unsigned char NiXie_Location;
  13          unsigned char NiXie_Value[8] = {16, 16, 16, 16, 16, 16, 16, 16};
  14          unsigned char NiXie_Dot[8] = {0, 0, 0, 0, 0, 0, 0, 0};
  15          // LED
  16          unsigned char LED_Value[8] = {0, 0, 0, 0, 0, 0, 0, 0};
  17          // 时间
  18          
  19          // 测量数据
  20          unsigned char temp_para = 25;
  21          unsigned int temp_val;
  22          unsigned char Digital_DAC;
  23          unsigned int Analog_DAC;
  24          // 标志位
  25          unsigned char state = 0; // 0 温度显示界面 1 参数设置界面 2 DAC输出界面
  26          bit mode = 0;            // 0 模式1 1 模式2
  27          void Clear_NiXie()
  28          {
  29   1          unsigned char i;
  30   1          for (i = 0; i < 8; i++)
  31   1          {
  32   2              NiXie_Value[i] = 16;
  33   2              NiXie_Dot[i] = 0;
  34   2          }
  35   1      }
  36          
  37          void Key_pro()
  38          {
  39   1          if (Key_Slow_Down)
  40   1              return;
  41   1          Key_Slow_Down = 1;
  42   1      
  43   1          Key_Val = Key_Scan();
  44   1          Key_Down = Key_Val & (Key_Val ^ Key_Old);
  45   1          Key_Down = ~Key_Val & (Key_Val ^ Key_Old);
  46   1          Key_Old = Key_Val;
  47   1      
  48   1          switch (Key_Down)
  49   1          {
  50   2          case 4:
  51   2              Clear_NiXie();
  52   2              if (state == 0)
  53   2                  state = 1;
  54   2              else if (state == 1)
C51 COMPILER V9.60.7.0   MAIN                                                              04/06/2024 23:11:24 PAGE 2   

  55   2                  state = 2;
  56   2              else if (state == 2)
  57   2                  state = 0;
  58   2              break;
  59   2          case 8:
  60   2              Clear_NiXie();
  61   2              if (state == 1)
  62   2                  temp_para -= 1;
  63   2              break;
  64   2          case 9:
  65   2              Clear_NiXie();
  66   2              if (state == 1)
  67   2                  temp_para += 1;
  68   2              break;
  69   2          case 5:
  70   2              Clear_NiXie();
  71   2              mode = ~mode;
  72   2              break;
  73   2          }
  74   1      }
  75          
  76          void NiXie_pro()
  77          {
  78   1          if (NiXie_Slow_Down)
  79   1              return;
  80   1          NiXie_Slow_Down = 1;
  81   1      
  82   1          temp_val = Read_temperature();
  83   1          if((mode == 0) && (state == 1))
  84   1          {
  85   2              if(temp_val < temp_para * 100)
  86   2                  Digital_DAC = 0;
  87   2              else if(temp_val > temp_para * 100)
  88   2                  Digital_DAC = 255;
  89   2          }
  90   1          else
  91   1          {
  92   2              Digital_DAC = 51 + (153 / 20) * ((temp_val / 100) - 20);
  93   2          }
  94   1          Analog_DAC = (Digital_DAC * 500) / 255;
  95   1          if (state == 0)
  96   1          {
  97   2              NiXie_Value[0] = 12;
  98   2              NiXie_Value[4] = (temp_val / 1000) ? (temp_val / 1000) : 16;
  99   2              NiXie_Value[5] = ((temp_val % 1000) / 100);
 100   2              NiXie_Value[6] = ((temp_val % 100) / 10);
 101   2              NiXie_Value[7] = temp_val % 10;
 102   2              NiXie_Dot[5] = 1;
 103   2          }
 104   1          else if(state == 1)
 105   1          {
 106   2              NiXie_Value[0] = 17;
 107   2              NiXie_Value[6] = temp_para / 10;
 108   2              NiXie_Value[7] = temp_para % 10;
 109   2          }
 110   1          else if(state == 2)
 111   1          {
 112   2              NiXie_Value[0] = 10;
 113   2              NiXie_Value[5] = Analog_DAC / 100;
 114   2              NiXie_Value[6] = (Analog_DAC % 100) / 10;
 115   2              NiXie_Value[7] = Analog_DAC % 10;
 116   2              NiXie_Dot[5] = 1;
C51 COMPILER V9.60.7.0   MAIN                                                              04/06/2024 23:11:24 PAGE 3   

 117   2          }
 118   1      }
 119          
 120          void Led_pro()
 121          {
 122   1          LED_Value[0] = ~mode;
 123   1          LED_Value[1] = (state == 0);
 124   1          LED_Value[2] = (state == 1);
 125   1          LED_Value[3] = (state == 3);
 126   1      }
 127          
 128          void Timer0_Isr(void) interrupt 1
 129          {
 130   1          if (++Key_Slow_Down == 10)
 131   1              Key_Slow_Down = 0;
 132   1          if (++NiXie_Slow_Down == 10)
 133   1              NiXie_Slow_Down = 0;
 134   1          if (++NiXie_Location == 8)
 135   1              NiXie_Location = 0;
 136   1      
 137   1          NiXie_Display(NiXie_Location, NiXie_Value[NiXie_Location], NiXie_Dot[NiXie_Location]);
 138   1          LED_Display(NiXie_Location, LED_Value[NiXie_Location]);
 139   1      }
 140          
 141          void Timer0_Init(void) // 1毫秒@12.000MHz
 142          {
 143   1          AUXR &= 0x7F; // 定时器时钟12T模式
 144   1          TMOD &= 0xF0; // 设置定时器模式
 145   1          TL0 = 0x18;   // 设置定时初始值
 146   1          TH0 = 0xFC;   // 设置定时初始值
 147   1          TF0 = 0;      // 清除TF0标志
 148   1          TR0 = 1;      // 定时器0开始计时
 149   1          ET0 = 1;      // 使能定时器0中断
 150   1          EA = 1;
 151   1      }
 152          
 153          void main()
 154          {
 155   1          while(Read_temperature() >= 8500)
 156   1              ;
 157   1          Init_Sys();
 158   1          Timer0_Init();
 159   1      
 160   1          while (1)
 161   1          {
 162   2              Key_pro();
 163   2              NiXie_pro();
 164   2              Led_pro();
 165   2          }
 166   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    637    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
